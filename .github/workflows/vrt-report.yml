name: Visual Regression Testing Report

on:
  pull_request:
    paths:
      - 'webview/**'

permissions:
  contents: write
  pull-requests: write

jobs:
  vrt-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.node-version'
          cache: 'npm'
          cache-dependency-path: 'webview/package-lock.json'

      - name: Install dependencies
        run: |
          cd webview
          npm ci --ignore-scripts

      - name: Get installed Playwright version
        id: playwright-version
        run: echo "version=$(cd webview && npm list playwright --depth=0 --parseable=true | grep playwright | cut -d@ -f2)" >> $GITHUB_OUTPUT

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ steps.playwright-version.outputs.version }}-${{ runner.os }}

      - name: Install Playwright browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: cd webview && npx playwright install chromium --with-deps

      - run: npx playwright install --with-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'
      - run: npx playwright install-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'

      - name: Run VRT tests
        run: |
          cd webview
          npm run test:browser -- --reporter=json --outputFile=./test/report.json --run
        continue-on-error: true

      - name: Prepare VRT images for GitHub Pages
        if: always()
        run: |
          # Create directory structure for GitHub Pages
          mkdir -p gh-pages-vrt/pr-${{ github.event.pull_request.number }}

          # Copy actual and diff images from vitest-attachments
          if [ -d "webview/.vitest-attachments" ]; then
            find webview/.vitest-attachments -name "*.png" -type f | while read -r file; do
              filename=$(basename "$file")
              cp "$file" "gh-pages-vrt/pr-${{ github.event.pull_request.number }}/$filename"
            done
          fi

          # List files for debugging
          echo "Files prepared for GitHub Pages:"
          find gh-pages-vrt -type f || echo "No files found"

      - name: Deploy VRT images to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./gh-pages-vrt
          keep_files: true
          destination_dir: vrt-images

      - name: Report test results
        uses: ctrf-io/github-test-reporter@v1
        if: always()
        with:
          report-path: ./webview/test/report.json
          title: 'ðŸ“¸ Visual Regression Test Report'
          pull-request-report: true
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Find existing comment
        if: always()
        uses: peter-evans/find-comment@v2
        id: find-comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: 'ðŸ“¸ Visual Regression Test Results'

      - name: Generate VRT Comment
        if: always()
        id: vrt-comment
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const { generateVRTComment } = require('./.github/workflows/scripts/generate-vrt-comment.js');
            const prNumber = context.issue.number;
            const repoName = context.repo.owner + '/' + context.repo.repo;
            const comment = generateVRTComment(prNumber, repoName);
            return comment;

      - name: Create or Update PR Comment
        if: always()
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          body: ${{ steps.vrt-comment.outputs.result }}
          edit-mode: replace
